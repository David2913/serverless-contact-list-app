service:
  name: serverless-contact-list-app

plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  environment:
    CONTACT_LIST_TABLE_NAME: ${env:CONTACT_LIST_TABLE}-Table-${self:provider.stage}
    CONTACT_ID_INDEX_NAME: ${env:CONTACT_LIST_TABLE}-Table-Id-Index-${self:provider.stage}
    CONTACT_PHOTO_S3_BUCKET_NAME: ${env:CONTACT_PHOTO_S3_BUCKET}-${self:provider.stage}
    AWS_SIGNED_URL_EXPIRATION: ${env:AWS_SIGNED_URL_EXPIRATION}
    AUTH0_JWKS_URL: ${env:AUTH0_JWKS_URL}

custom:
  dotenv:
    path: ./.env
    include:
      - CONTACT_LIST_TABLE
      - CONTACT_PHOTO_S3_BUCKET
      - AWS_SIGNED_URL_EXPIRATION
      - AUTH0_JWKS_URL

functions:
  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler
  
  CreateContact:
    handler: src/lambda/http/createContact.handler
    events:
      - http:
          method: post
          path: contacts
          cors: true
          authorizer: Auth
  
resources:
  Resources:
    ContactsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: name
            AttributeType: S
          - AttributeName: contactId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.CONTACT_LIST_TABLE_NAME}
        LocalSecondaryIndexes:
          - IndexName: ${self:provider.environment.CONTACT_ID_INDEX_NAME}
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: contactId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
